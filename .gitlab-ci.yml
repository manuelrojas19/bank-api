variables:
  MAVEN_IMAGE: maven:latest
  DOCKER_IMAGE: docker:latest

stages: # List of stages for jobs, and their order of execution
  - Build
  - Package
  - Push

Build: # Package the source code with maven
  image: $MAVEN_IMAGE
  stage: Build
  script:
    - echo "Compiling source code..."
    - mvn clean package
    - echo "Source code compiled successfully."
  artifacts:
    paths:
      - target/*.jar

Package: # Containerizing the generated jar.
  image: $DOCKER_IMAGE
  stage: Package
  services:
    - name: docker:dind
  script:
    - echo "Containerizing application..."
    - mkdir data/
    - docker build --compress -t proxy .
    - docker save --output data/image.tar proxy
    - echo "Application was containerized successfully."
  artifacts:
    name: image
    paths:
      - data/

Push: # Push generated image in the previous phase to DEV ECR repository
  image: $DOCKER_IMAGE
  stage: Push  # It only runs when *both* jobs in the test stage complete successfully.
  services:
    - name: docker:dind
  script:
    - docker tag proxy:latest $ECR_REPO:dev
    - docker push $ECR_REPO:dev
  rules:
    - if: "$CI_COMMIT_BRANCH == 'main'"

Push Release: # Push generated image in the previous phase to RELEASE ECR repository
  stage: Push
  script:
    - export TAGGED_ECR_REPO=$ECR_REPO:$(echo $CI_COMMIT_TAG | sed 's/-release//')
    - docker tag proxy:latest $TAGGED_ECR_REPO
    - docker push $TAGGED_ECR_REPO
    - docker tag $TAGGED_ECR_REPO $ECR_REPO:latest
    - docker push $ECR_REPO:latest
  rules:
    - if: "$CI_COMMIT_TAG =~ /^*-release$/"
